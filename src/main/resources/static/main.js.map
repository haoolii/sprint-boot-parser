{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/mapping-field/mapping-field.component.ts","./src/app/mapping-field/mapping-field.component.html","./src/app/mapping-field-file-upload/mapping-field-file-upload.component.ts","./src/app/mapping-field-file-upload/mapping-field-file-upload.component.html","./src/app/mapping-field-list/mapping-field-list.component.ts","./src/app/mapping-field-list/mapping-field-list.component.html","./src/app/mapping-field-detail/mapping-field-detail.component.ts","./src/app/mapping-field-detail/mapping-field-detail.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiDomain: ''\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'mapping-field-ng';\n}\n","<div class=\"app\">\n  <app-mapping-field></app-mapping-field>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MappingFieldComponent } from './mapping-field/mapping-field.component';\nimport { MappingFieldListComponent } from './mapping-field-list/mapping-field-list.component';\nimport { MappingFieldDetailComponent } from './mapping-field-detail/mapping-field-detail.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MappingFieldFileUploadComponent } from './mapping-field-file-upload/mapping-field-file-upload.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MappingFieldComponent,\n    MappingFieldListComponent,\n    MappingFieldDetailComponent,\n    MappingFieldFileUploadComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mapping-field',\n  templateUrl: './mapping-field.component.html',\n  styleUrls: ['./mapping-field.component.scss']\n})\nexport class MappingFieldComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-mapping-field-list></app-mapping-field-list>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-mapping-field-file-upload',\n  templateUrl: './mapping-field-file-upload.component.html',\n  styleUrls: ['./mapping-field-file-upload.component.scss']\n})\nexport class MappingFieldFileUploadComponent implements OnInit {\n\n  file: File = null;\n  name = '';\n\n  constructor(\n    private http: HttpClient,\n    public dialogRef: MatDialogRef<MappingFieldFileUploadComponent>,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  fileChange(target: HTMLInputElement): void {\n    const file = target.files[0];\n    this.file = file;\n    target.value = '';\n  }\n\n  upload(): void {\n    const formData = new FormData();\n    formData.append('file', this.file);\n    formData.append('name', this.name);\n    this.http.post(`${environment.apiDomain}`, formData)\n        .subscribe(response => {\n          this.dialogRef.close();\n        });\n  }\n}\n","<form ngForm #myForm=\"ngForm\">\n  <div class=\"top\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Mapping Field Name</mat-label>\n      <input matInput required [(ngModel)]=\"name\" name=\"name\">\n    </mat-form-field>\n    <button\n      mat-flat-button\n      color=\"primary\"\n      [disabled]=\"myForm.invalid\"\n      (click)=\"upload()\"\n    >匯入\n    </button>\n  </div>\n\n  <div>\n    <button\n      (click)=\"fileUpload.click()\"\n      mat-flat-button\n      color=\"primary\"\n    >\n      <mat-icon>attachment</mat-icon>\n      <span class=\"ml-1\">Add Files</span>\n    </button>\n    <input\n      #fileUpload\n      type=\"file\"\n      [hidden]=\"true\"\n      [(ngModel)]=\"file\" name=\"file\"\n      required\n      (change)=\"fileChange($event.currentTarget)\"\n    />\n    {{ file?.name }}\n  </div>\n</form>\n","import { MappingFieldDetailComponent } from './../mapping-field-detail/mapping-field-detail.component';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { environment } from '../../environments/environment';\nimport { MappingField } from '../interfaces/MappingField';\nimport { MappingFieldFileUploadComponent } from '../mapping-field-file-upload/mapping-field-file-upload.component';\nexport interface PeriodicElement {\n  id: number;\n  name: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n];\n\n\n@Component({\n  selector: 'app-mapping-field-list',\n  templateUrl: './mapping-field-list.component.html',\n  styleUrls: ['./mapping-field-list.component.scss']\n})\nexport class MappingFieldListComponent implements OnInit {\n  displayedColumns: string[] = ['id', 'name', 'operation'];\n  dataSource: MappingField[] = [];\n  constructor(\n    private http: HttpClient,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.getMappingFieldList();\n  }\n\n  getMappingFieldList(): void{\n    this.http.get<MappingField[]>(`${environment.apiDomain}/mappingFields`)\n      .subscribe(mappingFields => this.dataSource = mappingFields);\n  }\n\n  openDetail(id: number): void {\n    const dialogRef = this.dialog.open(\n      MappingFieldDetailComponent,\n      {\n        width: '800px',\n        height: '600px',\n        data: {\n          id\n        }\n      }\n    );\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.getMappingFieldList();\n    });\n  }\n\n  openFileUpload(): void {\n    const dialogRef = this.dialog.open(\n      MappingFieldFileUploadComponent,\n      {\n        width: '400px',\n        height: '200px'\n      }\n    );\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.getMappingFieldList();\n    });\n  }\n\n}\n","<mat-toolbar>\n <span>MappingField List</span>\n <span class=\"example-spacer\"></span>\n <button mat-icon-button (click)=\"openFileUpload()\">\n   <mat-icon>cloud_upload</mat-icon>\n </button>\n</mat-toolbar>\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z1\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef> Id. </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n\n    <!-- Operation Column -->\n    <ng-container matColumnDef=\"operation\">\n      <th mat-header-cell *matHeaderCellDef> Operation </th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button mat-stroked-button (click)=\"openDetail(element.id)\">DETAIL</button>\n      </td>\n    </ng-container>\n\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { environment } from 'src/environments/environment';\nimport { MappingField } from '../interfaces/MappingField';\n\n@Component({\n  selector: 'app-mapping-field-detail',\n  templateUrl: './mapping-field-detail.component.html',\n  styleUrls: ['./mapping-field-detail.component.scss']\n})\nexport class MappingFieldDetailComponent implements OnInit {\n  displayedColumns: string[] = ['key', 'value'];\n  mappingFiledObj: MappingField = null;\n\n  constructor(\n    private http: HttpClient,\n    public dialogRef: MatDialogRef<MappingFieldDetailComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n    this.http.get<MappingField>(`${environment.apiDomain}/mappingField`, { params: {\n      id: this.data.id\n    }}).subscribe(mappingField => this.mappingFiledObj = mappingField);\n  }\n\n  export(): void {\n    this.http.get(`${environment.apiDomain}/excel`, {\n      responseType: 'blob' as 'json',\n      observe: 'response',\n      params: {\n        id: this.data.id\n      },\n    }).subscribe(resp  => {\n      const contentDisposition = resp.headers.get('Content-Disposition');\n      const matches = /filename=\\\"?([^;\"]+)\\\"?;?/g.exec(contentDisposition);\n      const url = window.URL.createObjectURL(resp.body);\n      const a = document.createElement('a');\n      a.href = url;\n      (a as any).download = matches[1];\n      a.click();\n      a.remove();\n    });\n  }\n\n}\n","<mat-toolbar>\n  <span>\n    <ng-container *ngIf=\"mappingFiledObj\">\n      {{mappingFiledObj.name}}\n    </ng-container>\n  </span>\n  <span class=\"example-spacer\"></span>\n  <button mat-icon-button (click)=\"export()\">\n    <mat-icon>cloud_download</mat-icon>\n  </button>\n </mat-toolbar>\n<table *ngIf=\"mappingFiledObj\" mat-table [dataSource]=\"mappingFiledObj.items\" class=\"mat-elevation-z0\">\n\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef> Id. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"key\">\n    <th mat-header-cell *matHeaderCellDef> Key </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.key}} </td>\n  </ng-container>\n\n  <!-- Operation Column -->\n  <ng-container matColumnDef=\"value\">\n    <th mat-header-cell *matHeaderCellDef> Value </th>\n    <td mat-cell *matCellDef=\"let element\">\n      {{ element.value }}\n    </td>\n  </ng-container>\n\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}